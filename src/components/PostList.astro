---
import { getEntryBySlug } from 'astro:content';

const { posts, path, groupByYears, showReadingTime } = Astro.props;
---

{
  posts.map(async (post, index) => {
    const isExternalPost = !!post.data.url;
    const shouldShowReadingTime = showReadingTime && !isExternalPost;

    let readingTime;
    if (shouldShowReadingTime) {
      const postEntry = await getEntryBySlug(post.collection, post.slug);
      const { remarkPluginFrontmatter } = await postEntry!.render();
      readingTime = remarkPluginFrontmatter.readingTime;
    }

    let isYearChanged;
    if (groupByYears) isYearChanged = post.data.date.getFullYear() !== posts[index - 1]?.data.date.getFullYear();

    return (
      <div
        class:list={[
          'post pt-3 pb-4 border-b border-bg-border relative',
          { 'mb-3': index !== posts.length - 1, 'padding-extra': isYearChanged },
        ]}
        style={`animation-delay: ${index * 0.08}s`}
      >
        {isYearChanged && (
          <span class="absolute -top-[22px] -left-[26px] text-text-muted font-bold text-[5.4rem] opacity-[14%] tracking-wide select-none -z-[1]">
            {post.data.date.getFullYear()}
          </span>
        )}
        <a
          class="unset"
          href={isExternalPost ? post.data.url : `${path}/${post.slug}`}
          target={isExternalPost ? '_blank' : null}
          rel={isExternalPost ? 'noopener noreferrer' : null}
        >
          <h2 class="mb-1 text-[1.18rem] font-[500] transition-colors duration-200">
            {post.data.title}
            {isExternalPost && <i class="fas fa-arrow-up-right-from-square relative -top-[2px] text-sm ml-1" />}
          </h2>
          <div class="text-sm text-text-muted">
            <time datetime={post.data.date.toISOString()}>
              {post.data.date.toLocaleDateString('en-us', {
                year: 'numeric',
                month: 'short',
                day: '2-digit',
              })}
            </time>
            {shouldShowReadingTime && (
              <>
                <span class="text-text-body/20">â€¢</span>
                <span>&nbsp;{readingTime}</span>
              </>
            )}
          </div>
        </a>
      </div>
    );
  })
}

<style>
  .post {
    opacity: 0;
    animation: fadein 0.8s ease forwards;
  }

  .post.padding-extra {
    padding-top: 3.5rem;
  }

  @media (hover: hover) and (pointer: fine) {
    .post a:hover > h2 {
      color: theme('colors.primary.DEFAULT');
    }
  }
</style>
