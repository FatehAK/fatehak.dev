---
const { href, class: className, ...props } = Astro.props;
const path = Astro.url.pathname.replace(/\/$/, '');

const isHome = href === '/' && path === '';
const isOtherPages = typeof href === 'string' && href.length > 1 ? path.substring(1).startsWith(href.substring(1)) : false;
const isActive = isHome || isOtherPages;
---

<a href={href} class:list={[className, { show: isActive }, 'unset nav-link']} {...props}><slot /></a>

<style>
  .nav-link {
    --c: theme('colors.text.link');
    --s: 3.84px;

    padding-bottom: calc(2.8 * var(--s));
    text-decoration: none;
    background: conic-gradient(from 135deg at top, var(--c) 90deg, #0000 0) left 0 bottom var(--s) / calc(2 * var(--s)) var(--s) repeat-x,
      conic-gradient(from -45deg at bottom, var(--c) 90deg, #0000 0) left var(--s) bottom 0 / calc(2 * var(--s)) var(--s) repeat-x;
    mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0) 50% 100% / var(--p, 0%) padding-box no-repeat;
    transition: 0.4s;
  }

  .nav-link:is(:hover, .show) {
    --p: 100%;
  }
</style>
