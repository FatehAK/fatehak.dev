---
let children = await Astro.slots.render('default');
const hasPaddingBreakForChildren = children.includes('<pre') || children.includes('<figure');

function extractProps(): any {
  // we use ;foo=bar; as as boundary for defining our props
  const regex = /;([^;\s]+);/;
  const matches = children.match(regex);
  if (matches) {
    children = children.replace(regex, '');
    const params = matches[1].split(',');
    return params.reduce((acc, cur) => {
      const [key, val] = cur.split('=');
      acc[key] = val;
      return acc;
    }, {});
  }
  return {};
}

const { showIcon } = extractProps();
---

<aside
  class:list={[
    'my-5 callout',
    { 'disable-inner-break': hasPaddingBreakForChildren, 'border-left': showIcon, 'break-padding': !showIcon },
  ]}
>
  {
    showIcon && (
      <div class="callout-icon">
        <svg
          width="22"
          height="22"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          fill="none"
          viewBox="0 0 24 24"
        >
          <circle cx="12" cy="12" r="10" fill="none" />
          <path d="M12 16v-4M12 8h.01" stroke="currentColor" />
        </svg>
      </div>
    )
  }
  <blockquote set:html={children} />
</aside>

<style>
  .callout {
    position: relative;
    padding: 1rem 1.3rem;
    color: theme('colors.text.muted');
    background-color: theme('colors.text.body' / 2%);
    border: 1px solid theme('colors.bg.border');
    border-radius: 6px;
  }

  .callout.border-left {
    border-left: 1px solid theme('colors.primary.DEFAULT');
    border-radius: 4px;
    border-top-right-radius: 6px;
    border-bottom-right-radius: 6px;
  }

  .callout-icon {
    position: absolute;
    top: -16px;
    left: -20px;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 38px;
    height: 38px;
    color: theme('colors.primary.DEFAULT');
    background: theme('colors.bg.body');
    border-radius: 50%;
  }

  .callout.disable-inner-break :global(div[data-rehype-pretty-code-fragment]),
  .callout.disable-inner-break :global(figure) {
    @media (max-width: theme('screens.md.max')) {
      margin-right: unset;
      margin-left: unset;
    }

    @media (max-width: theme('screens.sm.max')) {
      margin-right: unset;
      margin-left: unset;
    }
  }
</style>
